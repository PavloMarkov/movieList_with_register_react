{"version":3,"sources":["CONST/CONSTANTS.ts","components/Carousel.tsx","components/Header.tsx","components/ListOfShows.tsx","components/Login.tsx","App.tsx","index.tsx"],"names":["images","label","imgPath","AutoPlaySwipeableViews","autoPlay","SwipeableViews","Carousel","theme","useTheme","useState","activeStep","setActiveStep","maxSteps","length","className","Box","sx","maxWidth","sm","flexGrow","padding","axis","direction","index","onChangeIndex","step","enableMouseEvents","map","image","style","display","justifyContent","Math","abs","position","component","height","overflow","src","alt","top","left","color","fontSize","md","fontWeight","textAlign","transform","MobileStepper","steps","nextButton","Button","size","onClick","prevActiveStep","disabled","backButton","Header","props","openModal","userName","signUpUser","trySignUp","isClickedBrowsBtn","setIsClickedBrowsBtn","m","variant","Typography","ListOfShows","isBrowse","listOfShows","setListOfShows","totalPages","ceil","page","setPage","expanded","setExpanded","expandId","setExpandedId","ExpandMore","styled","prop","expand","other","IconButton","marginLeft","transition","transitions","create","duration","shortest","useEffect","fetch","method","then","response","json","items","console","log","catch","err","error","showList","slice","pageStart","loadMore","setTimeout","prev","hasMore","loader","margin","alignItems","CircularProgress","show","Card","CardActionArea","CardMedia","title","CardContent","gutterBottom","fullTitle","year","lg","id","value","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","paragraph","crew","imDbRating","Stack","spacing","Pagination","count","onChange","event","Login","closeModal","loginUserName","isSignUp","isLogin","resumeSignUp","userEmail","setUserEmail","userPassword","setUserPassword","setUserName","isCorrectEmail","test","isCorrectPassword","canLogin","canSignUp","Modal","open","keepMounted","onClose","aria-labelledby","aria-describedby","width","bgcolor","border","boxShadow","p","TextField","type","target","placeholder","helperText","App","setIsLogin","setIsSignUp","setTrySignUp","setIsBrowse","useCallback","name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8389e265.chunk.js","sourcesContent":["export const images = [\n  {\n    label: 'After disaster at sea- a journey with Bengal tiger',\n    imgPath:\n      'https://m.media-amazon.com/images/M/MV5BNTg2OTY2ODg5OF5BMl5BanBnXkFtZTcwODM5MTYxOA@@._V1_SX300.jpg',\n  },\n  {\n    label: 'Lorem ipsum dolor sit amet consectetur adipisicing',\n    imgPath:\n      'https://m.media-amazon.com/images/M/MV5BMTA2NDYxOGYtYjU1Mi00Y2QzLTgxMTQtMWI1MGI0ZGQ5MmU4XkEyXkFqcGdeQXVyNDk3NzU2MTQ@._V1_SX300.jpg',\n  },\n  {\n    label: 'Pulp Fiction',\n    imgPath:\n      'https://m.media-amazon.com/images/M/MV5BNGNhMDIzZTUtNTBlZi00MTRlLWFjM2ItYzViMjE3YzI5MjljXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg',\n  },\n];\n","import React, { useState } from 'react';\n\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport MobileStepper from '@mui/material/MobileStepper';\nimport Button from '@mui/material/Button';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\nimport { images } from '../CONST/CONSTANTS';\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nexport const Carousel: React.FC = () => {\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = useState(0);\n  const maxSteps = images.length;\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStepChange = (step: number) => {\n    setActiveStep(step);\n  };\n\n  return (\n    <main\n      className=\"page\"\n    >\n      <Box sx={{\n        maxWidth: {\n          sm: '60%',\n        },\n        flexGrow: 1,\n        padding: '0 20px',\n      }}\n      >\n        <AutoPlaySwipeableViews\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n          index={activeStep}\n          onChangeIndex={handleStepChange}\n          enableMouseEvents\n        >\n          {images.map((image, index) => (\n            <Box\n              key={image.label}\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n              }}\n            >\n              {Math.abs(activeStep - index) <= 2\n                ? (\n                  <Box\n                    style={{\n                      position: 'relative',\n                    }}\n                  >\n                    <Box\n                      component=\"img\"\n                      sx={{\n                        height: '100%',\n                        display: 'block',\n                        overflow: 'hidden',\n                        maxWidth: '100%',\n                      }}\n                      src={image.imgPath}\n                      alt={image.label}\n                    />\n                    <Box\n                      component=\"div\"\n                      sx={{\n                        position: 'absolute',\n                        top: '50%',\n                        left: '50%',\n                        color: '#fff',\n                        fontSize: {\n                          sm: '16px',\n                          md: '40px',\n                        },\n                        fontWeight: 'bold',\n                        textAlign: 'center',\n                        transform: 'translate(-50%, -50%)',\n                      }}\n                    >\n                      {image.label}\n                    </Box>\n                  </Box>\n                ) : null}\n            </Box>\n          ))}\n        </AutoPlaySwipeableViews>\n        <MobileStepper\n          steps={maxSteps}\n          position=\"static\"\n          activeStep={activeStep}\n          nextButton={(\n            <Button\n              size=\"small\"\n              onClick={handleNext}\n              disabled={activeStep === maxSteps - 1}\n            >\n              Next\n              {theme.direction === 'rtl' ? (\n                <KeyboardArrowLeft />\n              ) : (\n                <KeyboardArrowRight />\n              )}\n            </Button>\n          )}\n          backButton={(\n            <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n              {theme.direction === 'rtl' ? (\n                <KeyboardArrowRight />\n              ) : (\n                <KeyboardArrowLeft />\n              )}\n              Back\n            </Button>\n          )}\n        />\n      </Box>\n    </main>\n  );\n};\n","import { Button, Typography } from '@mui/material';\nimport React, { useState } from 'react';\n\ntype Props = {\n  openModal: () => void;\n  userName: string;\n  signUpUser: () => void;\n  trySignUp: boolean;\n};\n\nexport const Header: React.FC<Props> = (props) => {\n  const {\n    openModal, userName, signUpUser, trySignUp,\n  } = props;\n\n  const [isClickedBrowsBtn, setIsClickedBrowsBtn] = useState(false);\n\n  const hideBrowseBtn = () => {\n    setIsClickedBrowsBtn(true);\n  };\n\n  return (\n    <nav\n      className=\"navbar\"\n    >\n      <div>\n        {!userName && (\n          <>\n            <Button\n              sx={{ m: 2 }}\n              variant=\"contained\"\n              size=\"large\"\n              color=\"success\"\n              onClick={signUpUser}\n            >\n              {trySignUp ? 'RESUME SIGN UP' : 'SIGN UP'}\n            </Button>\n            <Button\n              sx={{ m: 2 }}\n              variant=\"contained\"\n              size=\"large\"\n              color=\"secondary\"\n              onClick={openModal}\n            >\n              SIGN IN\n            </Button>\n            {!isClickedBrowsBtn && (\n              <Button\n                sx={{ m: 2 }}\n                variant=\"outlined\"\n                size=\"large\"\n                onClick={hideBrowseBtn}\n              >\n                BROWSE\n              </Button>\n            )}\n          </>\n        )}\n      </div>\n\n      {userName && (\n        <Typography\n          variant=\"h6\"\n          component=\"h6\"\n          sx={{ m: 2 }}\n        >\n          {`Header welcome ${userName}!`}\n        </Typography>\n      )}\n    </nav>\n  );\n};\n","import {\n  Typography, CardActionArea, Box, CircularProgress,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Collapse from '@mui/material/Collapse';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nimport React, { useEffect, useState } from 'react';\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ThumbDownIcon from '@mui/icons-material/ThumbDown';\n\ntype Show = {\n  crew: string;\n  fullTitle: string;\n  id: string;\n  imDbRating: number;\n  imDbRatingCount: number;\n  image: string;\n  rank: number;\n  title: string;\n  year: number;\n};\n\ntype Props = {\n  isBrowse: boolean;\n};\n\nexport const ListOfShows: React.FC<Props> = (props) => {\n  const { isBrowse } = props;\n\n  const [listOfShows, setListOfShows] = useState<Show[]>([]);\n  const perPage = 20;\n  const totalPages = Math.ceil(listOfShows.length / perPage);\n\n  const [page, setPage] = useState(1);\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\n    setTimeout(() => {\n      setPage(value);\n    },\n    500);\n  };\n\n  const loadMoreShows = () => {\n    setTimeout(() => {\n      setPage(prev => prev + 1);\n    },\n    500);\n  };\n\n  const [expanded, setExpanded] = useState(false);\n  const [expandId, setExpandedId] = useState('');\n\n  const handleExpandClick = (value: string) => {\n    if (expanded) {\n      setExpanded(!expanded);\n      setExpandedId('');\n    } else {\n      setExpanded(!expanded);\n      setExpandedId(value);\n    }\n  };\n\n  interface ExpandMoreProps extends IconButtonProps {\n    expand: boolean;\n  }\n\n  const ExpandMore = styled((prop: ExpandMoreProps) => {\n    const { expand, ...other } = prop;\n\n    return (\n      <IconButton\n        {...other}\n      />\n    );\n  })(({ theme, expand }) => ({\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  }));\n\n  useEffect(() => {\n    fetch('https://imdb-api.com/en/API/Top250TVs/k_a7n25zbu',\n      {\n        method: 'GET',\n      })\n      .then(response => response.json())\n      .then(response => {\n        setListOfShows(response.items);\n        // eslint-disable-next-line no-console\n        console.log(listOfShows);\n      })\n      // eslint-disable-next-line no-console\n      .catch(err => console.error(err));\n  }, []);\n\n  const showList = listOfShows.slice(0,\n    page * perPage > listOfShows.length\n      ? listOfShows.length\n      : page * perPage);\n\n  return (\n    <>\n      <section>\n        <InfiniteScroll\n          pageStart={page}\n          loadMore={loadMoreShows}\n          hasMore={showList.length < listOfShows.length}\n          loader={(\n            <Box\n              sx={{\n                display: 'flex',\n                margin: '20px',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n              key={0}\n            >\n              <CircularProgress />\n            </Box>\n          )}\n        >\n          <div className=\"shows\">\n            {showList.map(show => (\n              <Card\n                sx={{ maxWidth: 400 }}\n                key={show.id}\n              >\n                <CardActionArea\n                  sx={{\n                    position: 'relative',\n                  }}\n                >\n                  <CardMedia\n                    component=\"img\"\n                    height=\"345\"\n                    image={show.image}\n                    alt={show.title}\n                  />\n                  <CardContent>\n                    <Typography gutterBottom variant=\"body2\" component=\"p\">\n                      {show.fullTitle}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {`Year: ${show.year}`}\n                    </Typography>\n                  </CardContent>\n                  <Box\n                    component=\"div\"\n                    sx={{\n                      position: 'absolute',\n                      top: '40%',\n                      left: '50%',\n                      color: '#fff',\n                      fontSize: {\n                        sm: '16px',\n                        md: '40px',\n                        lg: '45px',\n                      },\n                      fontWeight: 'bold',\n                      textAlign: 'center',\n                      transform: 'translate(-50%, -50%)',\n                    }}\n                  >\n                    {show.title}\n                  </Box>\n                  {!isBrowse && (\n                    <ExpandMore\n                      expand={expandId === show.id}\n                      onClick={() => handleExpandClick(show.id)}\n                      aria-expanded={expandId === show.id}\n                      aria-label=\"show more\"\n                    >\n                      <ExpandMoreIcon />\n                    </ExpandMore>\n                  )}\n                </CardActionArea>\n                {expandId === show.id && (\n                  <Collapse in={expandId === show.id} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n                      <Typography paragraph>{`Crew: ${show.crew}`}</Typography>\n                      {show.imDbRating > 7\n                        ? <ThumbUpIcon />\n                        : <ThumbDownIcon />}\n                    </CardContent>\n                  </Collapse>\n                )}\n              </Card>\n            ))}\n          </div>\n        </InfiniteScroll>\n      </section>\n      <section>\n        <Stack\n          sx={{ m: 2 }}\n          spacing={2}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Pagination\n            count={totalPages}\n            variant=\"outlined\"\n            color=\"primary\"\n            page={page}\n            onChange={handleChange}\n          />\n        </Stack>\n      </section>\n    </>\n  );\n};\n","import {\n  Box, Button, Modal, TextField, Typography,\n} from '@mui/material';\nimport React, { useState } from 'react';\n\ntype Props = {\n  closeModal: () => void;\n  loginUserName: (name: string) => void;\n  isSignUp: boolean;\n  isLogin: boolean;\n  resumeSignUp: () => void;\n};\n\nexport const Login: React.FC<Props> = (props) => {\n  const {\n    closeModal, loginUserName, isSignUp, isLogin, resumeSignUp,\n  } = props;\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [userName, setUserName] = useState('');\n\n  const isCorrectEmail = /\\S+@\\S+\\.\\S+/.test(userEmail);\n  // eslint-disable-next-line no-useless-escape\n  const isCorrectPassword = /^(?=.*\\d)(?=.*[a-zA-Z])(?=.*[A-Z])(?=.*[-\\#\\$\\.\\%\\&\\*])(?=.*[a-zA-Z]).{6,18}$/.test(userPassword);\n\n  const canLogin = isCorrectEmail && isCorrectPassword;\n  const canSignUp = canLogin && userName;\n\n  if (canSignUp) {\n    resumeSignUp();\n  }\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n  };\n\n  return (\n    <section\n      className=\"login\"\n    >\n      <Modal\n        open={isLogin}\n        keepMounted\n        onClose={closeModal}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            {isSignUp ? 'Sign Up' : 'Login:'}\n          </Typography>\n          {isSignUp && (\n            <TextField\n              sx={{ margin: '10px', width: '90%' }}\n              error={userName === ''}\n              label=\"Name\"\n              type=\"text\"\n              value={userName}\n              onChange={(event) => setUserName(event.target.value)}\n              placeholder=\"Name\"\n              helperText={userName !== '' ? 'Name is correct' : 'Enter your name'}\n            />\n          )}\n          <TextField\n            sx={{ margin: '10px', width: '90%' }}\n            error={!isCorrectEmail}\n            label=\"E-mail\"\n            type=\"email\"\n            value={userEmail}\n            onChange={(event) => setUserEmail(event.target.value)}\n            placeholder=\"E-mail\"\n            helperText={isCorrectEmail ? 'Email is correct' : 'Enter valid e-mail'}\n          />\n          <TextField\n            sx={{ margin: '10px', width: '90%' }}\n            error={!isCorrectPassword}\n            label=\"Password\"\n            type=\"password\"\n            value={userPassword}\n            onChange={(event) => setUserPassword(event.target.value)}\n            placeholder=\"Password\"\n            helperText=\"min 6 chars: min 1 big letter, 1 number, 1 special\"\n          />\n          <Button\n            variant=\"contained\"\n            disabled={isSignUp ? !canSignUp : !canLogin}\n            type=\"button\"\n            size=\"large\"\n            color=\"success\"\n            sx={{ margin: '0 auto' }}\n            onClick={() => {\n              if (isSignUp) {\n                loginUserName(userName);\n              } else {\n                loginUserName(userEmail);\n              }\n\n              closeModal();\n            }}\n          >\n            {isSignUp ? 'Sign Up' : 'Login'}\n          </Button>\n        </Box>\n      </Modal>\n    </section>\n  );\n};\n","import { Box } from '@mui/material';\nimport React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport { Header } from './components/Header';\nimport { ListOfShows } from './components/ListOfShows';\nimport { Login } from './components/Login';\n\nexport const App: React.FC = () => {\n  const [isLogin, setIsLogin] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [trySignUp, setTrySignUp] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [isBrowse, setIsBrowse] = useState(true);\n\n  const openModal = useCallback(() => {\n    setIsLogin(true);\n    setIsSignUp(false);\n  }, []);\n  const closeModal = useCallback(() => {\n    setIsLogin(false);\n  }, []);\n\n  const loginUserName = useCallback((name) => {\n    setUserName(name);\n    setIsBrowse(false);\n  },\n  []);\n\n  const signUpUser = useCallback(() => {\n    setIsSignUp(true);\n    setIsLogin(true);\n  },\n  []);\n\n  const resumeSignUp = () => {\n    setTrySignUp(true);\n  };\n\n  return (\n    <Box className=\"container\">\n      <Header\n        openModal={openModal}\n        userName={userName}\n        signUpUser={signUpUser}\n        trySignUp={trySignUp}\n      />\n      <Carousel />\n      <Login\n        closeModal={closeModal}\n        loginUserName={loginUserName}\n        isSignUp={isSignUp}\n        isLogin={isLogin}\n        resumeSignUp={resumeSignUp}\n      />\n      <ListOfShows isBrowse={isBrowse} />\n    </Box>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}